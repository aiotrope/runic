name: Pull Request Pipeline

on:
  pull_request:
    types: [opened, synchronize, closed]
    paths-ignore:
      - 'README.md'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        mongodb-version: ['6.0']

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install Dependencies Backend
        run: yarn install --immutable
      - name: Install Dependencies Frontend
        run: cd frontend/ && yarn install --immutable
      - name: Format
        run: yarn run prettier
      - name: Lint
        run: yarn run eslint
      - name: Build Backend
        run: yarn run build:be
      - name: Build Frontend
        run: yarn run build:fe
      - name: Backend Tests
        run: yarn run test
        env:
          DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}

      - name: e2e Test
        uses: cypress-io/github-action@v4
        env:
          DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
        with:
          start: yarn run start:test
          wait-on: http://localhost:8000

  deploy:
    if: ${{ (github.event.pull_request.merged == true) && (!contains(github.event.head_commit.message, '#skip')) }}
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install backend dependencies
        run: yarn install --immutable
      - name: Install frontend dependencies
        run: cd frontend/ && yarn install --immutable
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: yarn run build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: PIMPfiction/AutoTagVersionRelease@v1
        with:
          github-token: ${{ secrets.PAT }}
